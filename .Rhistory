-2.409509
-2.719522
-0.9183778
-1.053613
2.091221
3.335136
4.108885
4.970418
6.745129
8.0478
7.50479
7.224556
8.190448
8.066995
6.227706
7.113068
7.454302
8.117067
8.455271
9.992034
10.23916
9.96164
8.600767
7.578254
6.8562
7.92126
8.353404
7.312638
8.410651
9.157614
9.643634
10.22547
9.92447
9.762784
9.730458
9.722397
9.19965
8.971664
8.984573
10.52289
10.89239
11.70291
11.9375
10.72466
12.22865
14.6071
14.85485
15.06069
16.1398
15.30766
14.91062
15.771
16.57537
17.28228
17.64807
17.59282
16.70269
15.2204
14.01701
14.84994
14.8447
14.50963
15.72877
14.69405
15.05813
15.60767
17.02722
16.20548
15.79259
16.77539
18.33802
18.37274
18.3962
17.45051
17.02491
17.07477
16.30629
15.93815
18.02887
17.80169
18.09706
17.81709
20.1671
19.8397
18.59114
19.16831
18.27264
16.9959
15.17095
14.30515
14.13316
12.17647
12.10204
12.96955
13.13581
13.69751
11.86319
12.03327
11.82428
12.51736
12.58995
12.81233
13.60496
14.83878
15.00977
14.99155
14.94315
15.16816
14.69515
15.01595
13.94599
15.75787
16.23098
15.81864
16.63384
15.84599
18.00769
19.52716
19.88638
19.9044
20.87256
20.00098
18.85818
20.31164
21.51557
21.6281
20.76186
20.39886
21.7998
23.59788
22.07844
23.24475
24.23199
24.18545
23.84297
24.21445
24.08244
24.15796
24.66938
26.70442
26.59929
26.22557
27.83847
26.66889
25.82143
24.2918
24.183
25.54358
26.76843
27.86811
28.66365
29.41739
30.14134
30.13606
30.20965
32.4359
32.80675
30.98791
30.10237
31.68318
31.88405
31.0144
31.5052
30.9105
31.5096
33.56601
34.36307
36.01057
36.6716
37.10729
37.46309
39.10782
38.57747)
y
y
equire(graphics)
## Examples from Venables & Ripley
acf(lh)
acf(lh, type = "covariance")
pacf(lh)
acf(ldeaths)
acf(ldeaths, ci.type = "ma")
acf(ts.union(mdeaths, fdeaths))
ccf(mdeaths, fdeaths, ylab = "cross-correlation")
# (just the cross-correlations)
presidents # contains missing values
acf(presidents, na.action = na.pass)
pacf(presidents, na.action = na.pass)
pacf(presidents, na.action = na.pass)
df <- read.table("Libro1.xlsx", header = TRUE)
View(df)
View(df)
detach("package:tseries", unload=TRUE)
install.packages("xlsx")
datos<- read.xlsx("Libro1.xlsx", 1)
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.3/library")
datos<- read.xlsx("Libro1.xlsx", 1)
View(datos)
x<- ts(datos)
pacf(x, na.action = na.pass)
datos<- data.frame(datos,1:300)
View(datos)
timepo< 1:300\
timepo<- 1:300
dat<- data.frame(datos,1:300)
View(dat)
datos<- read.xlsx("Libro1.xlsx", 1)
dat<- data.frame(datos,1:300)
datos<- read.xlsx("Libro1.xlsx", 1)
dat<- data.frame(datos,tiempo)
tiempo< 1:300
tiempo<- 1:300
dat<- data.frame(datos,tiempo)
View(dat)
View(dat)
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("Grafica Ruido Blanco\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("Grafica Ruido Blanco\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.3/library")
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("Grafica Ruido Blanco\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.3/library")
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("Grafica Ruido Blanco\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=dat, aes(x=tiempo, y=datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
source('~/Estadistica 3/generaAR.R')
generaAR.R(100,0.6)
source('~/.active-rstudio-document')
generaAR.R(100,0.6)
bp<- ggplot(data=dat, aes(x=tiempo, y=y, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=dat, aes(x=tiempo, y=y, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
x<- read.xlsx("Libro1.xlsx", 1)
y<- 1:300
car <- data.frame(x,y)
bp<- ggplot(data=car, aes(x=x, y=y, group=1)) +
+     geom_line(colour="blue", linetype="solid", size=1.5) +
+     geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=car, aes(x=x, y=y, group=1))
bp
bp<- ggplot(data=car, aes(x=x, y=y, group=1)) +
+     geom_line(colour="blue", linetype="solid", size=1.5) +
+     geom_point(colour="red", size=4, shape=21, fill="white")
bp<- ggplot(data=car, aes(x=x, y=y, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("METODO AUTOREGRESIVO\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
bp
plot(x,y)
plot(y,x)
plot(y,x)
plot(x,y)
plot(car)
bp<- ggplot(data=car, aes(x=x, y=y, group=1)) +
+     +     geom_line(colour="blue", linetype="solid", size=1.5) +
+     +     geom_point(colour="red", size=4, shape=21, fill="white")
Error in +geom_line(colour = "blue", linetype = "solid", size = 1.5)
bp<- ggplot(data=car, aes(x=y, y=x, group=1)) +
+     geom_line(colour="blue", linetype="solid", size=1.5) +
+     geom_point(colour="red", size=4, shape=21, fill="white")
plot(y, x, type="n", main=heading)
length(y)
length(x)
x
y
x<- read.xlsx("Libro1.xlsx", 1)
plot(y, x, type="n", main=heading)
length(x)
x
x
x<- read.xlsx("Libro1.xlsx", 1)
length(x)
View(x)
View(x)
View(x)
View(x)
View(x)
length(x)
View(x)
x<- as.numeric(x)
x<- as.vector(x)
x
x<- as.numeric(x)
x<- as.numeric(x[,2])
x<- as.numeric(x[2,])
x
x<- read.xlsx("Libro1.xlsx", 1)
x<- as.vector(x)
x
View(x)
plot(x)
plot(1:300,x)
View(x)
x.asnumeric(x)
x.asnumeric(x)
View(x)
x<- as.numeric(x)
x<- c(x)
x
x<- as.numeric(x)
source('~/Estadistica 3/generaAR.R')
x<- read.xlsx("Libro1.xlsx", 1)
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.3/library")
x<- read.xlsx("Libro1.xlsx", 1)
x<- as.vector(x)
x<- as.numeric(levels(x))
x
x<- as.numeric(levels(x))
summary(x)
class(x)
x<- read.xlsx("Libro1.xlsx", 1)
class(x)
class(x)
View(x)
for(i in 3:32) {
y[,i]<- as.numeric(levels(data[,i]))
}
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.3/library")
x<- read.xlsx("Libro1.xlsx", 1)
for(i in 1:300) {
y[,i]<- as.numeric(levels(x[i,]))
}
for(i in 1:300) {
x[i,]<- as.numeric(levels(x[i,]))
}
for(i in 1:300) {
x[i,]<- as.numeric(levels(x[i,]))
}
x[,1]<- as.numeric(levels(x[,1]))
x
class(x)
plot(x)
plot(1:300,x)
class(x[1,])
class(x[,1])
x<- as.vector(x[,1])
x
plot(1:300,x)
plot(1:300,x)
tiempo<- 1:300
data<- data.frame(tiempo,x)
data
plot(data)
bp<- ggplot(data=data, aes(x=tiempo, y=x, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("METODO AUTOREGRESIVO\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.3/library")
bp<- ggplot(data=data, aes(x=tiempo, y=x, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
bp + ggtitle("METODO AUTOREGRESIVO\n AR(1)") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
# fin de la funcion
setwd("~/Estadistica 3")
Datos <- read.table("datos.txt", sep="\t")
Tiempo<- 0:300
library("ggplot2")
Dat<- data.frame(Tiempo,Datos)
library(plyr)
Dat<- rename(Dat, c("V1"="Datos"))
bp<- ggplot(data=Dat, aes(x=Tiempo, y=Datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=3, shape=21, fill="white")
bp + ggtitle("DATOS ORIGINALES A1 UNIDAD 3") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
x1<- Dat[,2]
x <- ts(x1)
ts.plot(x, main = "Datos Ajustados por Diferencial (1)", xlab="Tiempo", ylab="Datos")
x<-diff(x,1)
ts.plot(x, main = "Datos Ajustados por Diferencial (1)", xlab="Tiempo", ylab="Datos")
AIC(arima(Dat_dif,order = c(0,0,4)),arima(Dat_dif,order = c(4,0,0)))
AIC(arima(Dat_dif,order = c(0,0,4)),arima(Dat_dif,order = c(4,0,0)))
Dat_Dif<-diff(x,1)
AIC(arima(Dat_dif,order = c(0,0,4)),arima(Dat_dif,order = c(4,0,0)))
Dat_Dif
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
generaAR4.R(300,0.9,0.5,0.5,0.2)
generaAR4.R(300,0.9,-0.5,-0.5,-0.2)
generaAR4.R(30,0.9,-0.5,-0.5,-0.2)
generaAR4.R(100,0.9,-0.5,-0.5,-0.2)
generaAR4.R(100,0.1026,0.036,0.0846,0.1178)
generaAR4.R(300,0.1026,0.036,0.0846,0.1178)
source('~/.active-rstudio-document')
generaAR4.R(300,0.1026,0.036,0.0846,0.1178)
y
source('~/.active-rstudio-document')
phi1<-0.1026
phi2<-0.036
phi3<-0.0846
phi4<-0.1178
n<-300
mburn <- 300
m <- n + mburn
y <- {1:m}
tiempo <- {1:n}
# generar ruido blanco
eps <- rnorm(m)
y[1] <- eps[1]
y[2] <- eps[2]
y[3] <- eps[3]
y[4] <- eps[4]
# generar proceso AR(1) en vec y[]
for(i in {5:m}){
y[i] <- phi1*y[i-1] +phi2*y[i-2]+phi3*y[i-3]+phi4*y[i-4] + eps[i]}
# tirar las primeras mburn observaciones
y <- y[(mburn+1):m]
y
setwd("~/Estadistica 3")
Datos <- read.table("datos.txt", sep="\t")
Tiempo<- 0:300
library("ggplot2")
Dat<- data.frame(Tiempo,Datos)
library(plyr)
Dat<- rename(Dat, c("V1"="Datos"))
bp<- ggplot(data=Dat, aes(x=Tiempo, y=Datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=3, shape=21, fill="white")
bp + ggtitle("DATOS ORIGINALES") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
setwd("~/Estadistica 3")
Datos <- read.table("datos.txt", sep="\t")
Tiempo<- 0:300
library("ggplot2")
Dat<- data.frame(Tiempo,Datos)
library(plyr)
Dat<- rename(Dat, c("V1"="Datos"))
bp<- ggplot(data=Dat, aes(x=Tiempo, y=Datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=2, shape=21, fill="white")
bp + ggtitle("DATOS ORIGINALES") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
setwd("~/Estadistica 3")
Datos <- read.table("datos.txt", sep="\t")
Tiempo<- 0:300
library("ggplot2")
Dat<- data.frame(Tiempo,Datos)
library(plyr)
Dat<- rename(Dat, c("V1"="Datos"))
bp<- ggplot(data=Dat, aes(x=Tiempo, y=Datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=1, shape=21, fill="white")
bp + ggtitle("DATOS ORIGINALES") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
acf(Dat[,2], na.action = na.pass,  main = "AFC Autocorrelación")
pacf(Dat[,2], na.action = na.pass,  main = "PAFC Autocorrelación Parcial")
DatosLog<- Dat[,2]
DatosLog
ts.plot(DatosLog,col=1,main="Ajuste logarítmico")
setwd("~/Estadistica 3")
Datos <- read.table("datos.txt", sep="\t")
Tiempo<- 0:199
library("ggplot2")
Dat<- data.frame(Tiempo,Datos)
library(plyr)
Dat<- rename(Dat, c("V1"="Datos"))
bp<- ggplot(data=Dat, aes(x=Tiempo, y=Datos, group=1)) +
geom_line(colour="blue", linetype="solid", size=1.5) +
geom_point(colour="red", size=3, shape=21, fill="white")
bp + ggtitle("DATOS ORIGINALES") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
DatosLog<- log(Dat[,2])
ts.plot(DatosLog,col=1,main="Ajuste logarítmico", xlab = "Tiempo")
DatosD1<-diff(Dat[,2])
ts.plot(DatosD1,col=1,main="Datos originales diferenciados", xlab = "Tiempo")
# se calcula la primera diferencia para los datos con transformación logarítmica:
DatosD2<-diff(DatosLog)
ts.plot(DatosD2,col=1,main="Datos Log diferenciados")
acf(DatosD2,main="Autocorrelación para Datos Log Diferenciados",ylim=c(-1,1),ci.col="blue",ylab="ACF")
pacf(DatosD2,main="Autocorrelación parcial para Datos Log Diferenciados",ci.col="green",ylab="PACF")
DatosCen<-DatosD2-mean(DatosD2)
ts.plot(DatosCen,main="Datos Transformados y centrado",xlab = "Tiempo")
ma5fift<-arima(DatosCen,c(0,0,5))
ma5fift
library(forecast)
install.packages("library(forecast)")
